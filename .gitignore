## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.

# Tool Runtime Dir
/[Tt]ools/
/src/[Bb]ootstrap/

# User-specific files
*.suo
*.user
*.sln.docstates
.vscode/
.vs/
.idea/

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
Binaries/
x64/
x86/
bld/
[Bb]in/
[Oo]bj/
Artifacts/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

#NUNIT
*.VisualState.xml
TestResult.xml

# Installshield output folder
[Ee]xpress/

# Click-Once directory
publish/

# NuGet Packages
*.nupkg
# The packages folder can be ignored because of Package Restore
**/packages/*
# except build/, which is used as an MSBuild target.
!**/packages/build/
# If using the old MSBuild-Integrated Package Restore, uncomment this:
#!**/packages/repositories.config
# Auto-downloaded nuget.exe
**/[Nn]u[Gg]et.exe
*.lock.json
*.nuget.props
*.nuget.targets

# Others
sql/
*.Cache
ClientBin/
[Ss]tyle[Cc]op.*
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.pfx
*.publishsettings
node_modules/
patch.diff

# Backup & report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm

# SQL Server files
*.mdf
*.ldf

# Temporary working files
**/pingme.txt
.vs/
src/SetupTestScriptOutput.txt

\.DS_Store

# Binary MSBuild Log files
*.binlog

# VS Code
.ionide/